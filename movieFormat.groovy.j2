{
  import groovy.json.JsonSlurper
  import groovy.json.JsonOutput

  def sub = include('{{ scriptDir }}//partials/stdPart.groovy')

  def normMovie = {
    it.replaceTrailingBrackets()
      // .upperInitial().lowerTrail()
      .replaceAll(/[`´‘’ʻ""“”]/, "'")
      .replaceAll(/[:|]/, " - ")
      // .replaceAll(/[:]/, "\u2236") // "∶" Ratio symbol
      // .replaceAll(/[:]/, "\uFF1A") // "：" Fullwidth Colon
      // .replaceAll(/[:]/, "\uFE55") // "﹕" Small Colon
      // .replaceAll("/", "\u29F8") // "⧸" Big Solidus
      // .replaceAll("/", "\u2215") // "∕" Division Slash
      // .replaceAll("/", "\u2044") // "⁄" Fraction Slash
      // .replaceAll(/[?]/, "\uFF1F") // "？" Fullwidth Question Mark
      .replaceAll(/[?]/, "\uFE56") // "﹖" Small Question Mark
      .replaceAll(/[\*]/, "\u204E") // "⁎" low asterisk
      .replaceAll(/[*\p{Zs}]+/, " ")
      .replaceAll(/\b[IiVvXx]+\b/, { it.upper() })
      .replaceAll(/\b[0-9](?i:th|nd|rd)\b/, { it.lower() })
  }

  Boolean isLatin = {
    java.text.Normalizer.normalize(it, java.text.Normalizer.Form.NFD)
                        .replaceAll(/\p{InCombiningDiacriticalMarks}+/, '') ==~ /^\p{InBasicLatin}+$/
  }

  def translJap = {
    /* rate limited to 100 per day I believe, please be careful */
    Object url = new URL('https://api.kuroshiro.org/convert')
    Map requestHeaders = [:]
    Map postBody = [:]
    postBody.str = it
    postBody.to = 'romaji'
    postBody.mode = 'spaced'
    postBody.romajiSystem = 'hepburn'
    def postResponse = url.post(JsonOutput.toJson(postBody).getBytes('UTF-8'), 'application/json', requestHeaders)
    Object json = new JsonSlurper().parseText(postResponse.text)
    return json.result
  }

  def transl = {
    (languages.first().iso_639_2B == 'jpn') ? translJap(it) : it.transliterate('Any-Latin; NFD; NFC; Title')
  }

  allOf
    {
      if ((media.OverallBitRate.toInteger() / 1000 < 3000 && vf.minus("p").toInteger() >= 720)
        || vf.minus("p").toInteger() < 720) {
        return "LQ_Movies"
      } else {
        return "Movies"
      }
    }
    // Movies directory
    { def film_directors = info.directors.sort().join(", ")
      n.colon("\u2236 ") + " ($y) [$film_directors]" }
    // File name
    { allOf
      { isLatin(primaryTitle) ? primaryTitle.colon("\u2236 ") : transl(primaryTitle).colon("\u2236 ") }
      {" ($y)"}
      // tags + a few more variants
      { include '{{ scriptDir }}/partials/extraTags.groovy' }
      {" PT $pi"}
      {" ["}
      { allOf
        { // Video
          // net.filebot.media.VideoFormat.DEFAULT_GROUPS.guessFormat(dim[0], dim[1])
          allOf
            { vf }
            { vc }
            { include '{{ scriptDir }}/partials/hdrPart.groovy' }
          .join(" ")
        }
        { include '{{ scriptDir }}/partials/audioPart.groovy' }
        { include '{{ scriptDir }}/partials/extraSource.groovy' }
        .join(" - ") }
      {"]"}
      { include '{{ scriptDir }}/partials/repackPart.groovy' }
      { include "{{ scriptDir }}/partials/groupPart.groovy" }
      {subt}
    .join("") }
  .join("/")
}
